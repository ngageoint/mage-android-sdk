import org.ajoberstar.grgit.Grgit;

plugins {
    id 'net.linguica.maven-settings' version '0.5'
    id 'org.ajoberstar.grgit' version '1.6.0'
}
apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

group 'mil.nga.giat.mage'
archivesBaseName = 'mage-android-sdk'
version '6.2.5'
ext {
    versionCode = 26
    sourceRefspec = Grgit.open().head().id
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        resValue 'string', 'source_refspec', project.sourceRefspec
        manifestPlaceholders source_refspec: project.sourceRefspec
        buildConfigField 'String', 'SOURCE_REFSPEC', $/"${project.sourceRefspec}"/$
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

task sourceJar(type: Jar) {
    from project.android.sourceSets.main.java.srcDirs
}

def configurePom(pom) {
    // the publication doesn't know about our dependencies, so we have to manually add them to the pom
    // epic fail android
    pom.withXml {
        // for dependencies and exclusions
        def dependenciesNode = asNode().appendNode('dependencies')
        configurations.api.allDependencies.each { Dependency dep ->
            if (dep instanceof SelfResolvingDependency) {
                // apparently the files() dependency results in a SelfResolvingDependency - skip it
                return;
            }

            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', dep.group)
            dependencyNode.appendNode('artifactId', dep.name)
            dependencyNode.appendNode('version', dep.version)

            // for exclusions
            if (dep.excludeRules.size() > 0) {
                def exclusions = dependencyNode.appendNode('exclusions')
                dep.excludeRules.each { ExcludeRule ex ->
                    def exclusion = exclusions.appendNode('exclusion')
                    exclusion.appendNode('groupId', ex.group)
                    exclusion.appendNode('artifactId', ex.module)
                }
            }
        }
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            artifactId archivesBaseName
            pom.packaging 'aar'
            configurePom(pom)
            project.afterEvaluate {
                artifact "${project.buildDir}/outputs/aar/${archivesBaseName}-release.aar", {
                    builtBy assembleRelease
                }
                artifact "${project.buildDir}/outputs/aar/${archivesBaseName}-debug.aar", {
                    classifier 'debug'
                    builtBy assembleDebug
                }
                artifact sourceJar, {
                    classifier 'sources'
                    builtBy sourceJar
                }
            }
        }
    }
}

repositories {
    def buildRepo = maven {
        name 'build'
        url project.properties['repositories.build.url'] ?: "${buildDir}/m2"
    }
    publishing.repositories.add buildRepo

    if (project.hasProperty('repositories.shared.name')) {
        def sharedRepo = maven {
            name project.properties['repositories.shared.name']
            url "${project.properties['repositories.shared.url']}"
        }
        publishing.repositories.add sharedRepo
    }
}

dependencies {
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.preference:preference:1.1.0'
    api 'androidx.exifinterface:exifinterface:1.0.0'
    api 'com.j256.ormlite:ormlite-android:5.1'
    api 'mil.nga.geopackage:geopackage-android:3.4.0'
    api 'com.squareup.retrofit2:retrofit:2.5.0'
    api 'com.squareup.retrofit2:converter-gson:2.5.0'
    api 'com.squareup.retrofit2:converter-jackson:2.5.0'
    api 'com.squareup.okhttp3:okhttp:3.12.0'
    api 'com.squareup.okhttp3:okhttp-urlconnection:3.11.0'
    api 'com.google.code.gson:gson:2.8.2'
    api 'com.google.guava:guava:18.0'
    api 'org.apache.commons:commons-lang3:3.3.2'
    api 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
    api files('libs/sanselanandroid.jar')
}
